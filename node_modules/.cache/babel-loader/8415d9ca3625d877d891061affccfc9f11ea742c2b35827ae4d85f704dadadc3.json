{"ast":null,"code":"export default {\n  data() {\n    return {\n      isLargeScreen: true,\n      shouldHideBottomNav: false,\n      scrollTimer: null\n    };\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleScreenResize);\n    this.handleScreenResize();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleScreenResize);\n  },\n  methods: {\n    handleScreenResize() {\n      this.isLargeScreen = window.innerWidth >= 768;\n    },\n    handleScroll() {\n      clearTimeout(this.scrollTimer);\n\n      // Set a timeout to hide the bottom nav after 2 seconds of scroll inactivity\n      this.scrollTimer = setTimeout(() => {\n        this.shouldHideBottomNav = true;\n      }, 2000);\n\n      // Show the bottom nav if the body content is scrolled to the top\n      const bodyContent = this.$refs.bodyContent;\n      if (bodyContent.scrollTop === 0) {\n        this.shouldHideBottomNav = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","isLargeScreen","shouldHideBottomNav","scrollTimer","mounted","window","addEventListener","handleScreenResize","beforeUnmount","removeEventListener","methods","innerWidth","handleScroll","clearTimeout","setTimeout","bodyContent","$refs","scrollTop"],"sources":["C:\\Users\\burge\\OneDrive\\Desktop\\mh_py\\frontend\\src\\components\\LandingPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-black flex flex-col min-h-screen\">\r\n    <div class=\"w-full bg-sky-300 h-20\">top nav</div>\r\n    <div class=\"flex w-screen flex-grow\">\r\n      <div v-if=\"isLargeScreen\" class=\"w-36 h-screen bg-cyan-100\">side nav</div>\r\n      <div class=\"w-screen h-auto bg-green-50\" ref=\"bodyContent\" @scroll=\"handleScroll\">body</div>\r\n    </div>\r\n    <div\r\n      class=\"h-24 bg-green-500 fixed bottom-0 w-screen\"\r\n      :class=\"{ 'hidden': shouldHideBottomNav }\"\r\n    >\r\n      bottom nav\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLargeScreen: true,\r\n      shouldHideBottomNav: false,\r\n      scrollTimer: null\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('resize', this.handleScreenResize);\r\n    this.handleScreenResize();\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.handleScreenResize);\r\n  },\r\n  methods: {\r\n    handleScreenResize() {\r\n      this.isLargeScreen = window.innerWidth >= 768;\r\n    },\r\n    handleScroll() {\r\n      clearTimeout(this.scrollTimer);\r\n\r\n      // Set a timeout to hide the bottom nav after 2 seconds of scroll inactivity\r\n      this.scrollTimer = setTimeout(() => {\r\n        this.shouldHideBottomNav = true;\r\n      }, 2000);\r\n\r\n      // Show the bottom nav if the body content is scrolled to the top\r\n      const bodyContent = this.$refs.bodyContent;\r\n      if (bodyContent.scrollTop === 0) {\r\n        this.shouldHideBottomNav = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.hidden {\r\n  display: none;\r\n}\r\n</style>\r\n"],"mappings":"AAiBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE,KAAK;MAC1BC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAC1D,IAAI,CAACA,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,kBAAkB,CAAC;EAC/D,CAAC;EACDG,OAAO,EAAE;IACPH,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACN,aAAY,GAAII,MAAM,CAACM,UAAS,IAAK,GAAG;IAC/C,CAAC;IACDC,YAAYA,CAAA,EAAG;MACbC,YAAY,CAAC,IAAI,CAACV,WAAW,CAAC;;MAE9B;MACA,IAAI,CAACA,WAAU,GAAIW,UAAU,CAAC,MAAM;QAClC,IAAI,CAACZ,mBAAkB,GAAI,IAAI;MACjC,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,MAAMa,WAAU,GAAI,IAAI,CAACC,KAAK,CAACD,WAAW;MAC1C,IAAIA,WAAW,CAACE,SAAQ,KAAM,CAAC,EAAE;QAC/B,IAAI,CAACf,mBAAkB,GAAI,KAAK;MAClC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}