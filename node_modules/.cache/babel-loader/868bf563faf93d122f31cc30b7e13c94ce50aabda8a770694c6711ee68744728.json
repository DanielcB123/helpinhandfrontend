{"ast":null,"code":"import * as THREE from 'three';\nimport LoginView from '@/components/LoginView.vue';\nexport default {\n  data() {\n    return {\n      isLargeScreen: true,\n      hideBottomNav: false,\n      scrollTimer: null,\n      prevScrollY: 0,\n      showLoginModal: false,\n      cube: null,\n      renderer: null,\n      scene: null\n    };\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleScreenResize);\n    this.handleScreenResize();\n    window.addEventListener('scroll', this.handleScroll);\n\n    // Initialize the 3D scene\n    this.initScene();\n    // Start the animation loop\n    this.animate();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleScreenResize);\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    handleScreenResize() {\n      this.isLargeScreen = window.innerWidth >= 768 || window.scrollY === 0;\n      this.hideBottomNav = window.innerWidth >= 768 || window.scrollY === 0;\n    },\n    handleScroll() {\n      clearTimeout(this.scrollTimer);\n      if (window.pageYOffset > this.prevScrollY || window.innerWidth >= 768) {\n        // Scrolling down\n        this.hideBottomNav = true;\n      } else {\n        // Scrolling up\n        this.hideBottomNav = false;\n      }\n      if (window.scrollY === 0) {\n        // At top of page\n        this.hideBottomNav = true;\n      }\n      this.prevScrollY = window.pageYOffset;\n\n      // Set a timeout to hide the bottom nav after 5 seconds of scroll inactivity\n      this.scrollTimer = setTimeout(() => {\n        this.hideBottomNav = true;\n      }, 5000);\n    },\n    openLoginModal() {\n      this.showLoginModal = true;\n    },\n    closeLoginModal() {\n      this.showLoginModal = false;\n    },\n    initScene() {\n      // Create a scene\n      this.scene = new THREE.Scene();\n\n      // Create a cube geometry\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      this.scene.add(cube);\n      this.cube = cube;\n\n      // ...\n    },\n\n    animate() {\n      requestAnimationFrame(this.animate);\n      if (window.scrollY > 0) {\n        // Calculate the rotation angles based on the scroll position\n        const rotationX = window.scrollY / window.innerHeight * Math.PI * 2;\n        const rotationY = window.scrollY / window.innerHeight * Math.PI * 2;\n\n        // Apply the rotation to the cube\n        this.cube.rotation.x = rotationX;\n        this.cube.rotation.y = rotationY;\n\n        // Render the scene\n        this.renderer.render(this.scene, this.camera);\n      }\n    }\n  },\n  components: {\n    LoginView\n  }\n};","map":{"version":3,"names":["THREE","LoginView","data","isLargeScreen","hideBottomNav","scrollTimer","prevScrollY","showLoginModal","cube","renderer","scene","mounted","window","addEventListener","handleScreenResize","handleScroll","initScene","animate","beforeUnmount","removeEventListener","methods","innerWidth","scrollY","clearTimeout","pageYOffset","setTimeout","openLoginModal","closeLoginModal","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","requestAnimationFrame","rotationX","innerHeight","Math","PI","rotationY","rotation","x","y","render","camera","components"],"sources":["C:\\Users\\burge\\OneDrive\\Desktop\\mh_py\\frontend\\src\\components\\LandingPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-black flex flex-col min-h-screen\">\r\n    <!-- Rest of your template code -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three';\r\nimport LoginView from '@/components/LoginView.vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLargeScreen: true,\r\n      hideBottomNav: false,\r\n      scrollTimer: null,\r\n      prevScrollY: 0,\r\n      showLoginModal: false,\r\n      cube: null,\r\n      renderer: null,\r\n      scene: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('resize', this.handleScreenResize);\r\n    this.handleScreenResize();\r\n    window.addEventListener('scroll', this.handleScroll);\r\n\r\n    // Initialize the 3D scene\r\n    this.initScene();\r\n    // Start the animation loop\r\n    this.animate();\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.handleScreenResize);\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  },\r\n  methods: {\r\n    handleScreenResize() {\r\n      this.isLargeScreen = window.innerWidth >= 768 || window.scrollY === 0;\r\n      this.hideBottomNav = window.innerWidth >= 768 || window.scrollY === 0;\r\n    },\r\n    handleScroll() {\r\n      clearTimeout(this.scrollTimer);\r\n\r\n      if (window.pageYOffset > this.prevScrollY || window.innerWidth >= 768) {\r\n        // Scrolling down\r\n        this.hideBottomNav = true;\r\n      } else {\r\n        // Scrolling up\r\n        this.hideBottomNav = false;\r\n      }\r\n\r\n      if (window.scrollY === 0) {\r\n        // At top of page\r\n        this.hideBottomNav = true;\r\n      }\r\n\r\n      this.prevScrollY = window.pageYOffset;\r\n\r\n      // Set a timeout to hide the bottom nav after 5 seconds of scroll inactivity\r\n      this.scrollTimer = setTimeout(() => {\r\n        this.hideBottomNav = true;\r\n      }, 5000);\r\n    },\r\n    openLoginModal() {\r\n      this.showLoginModal = true;\r\n    },\r\n    closeLoginModal() {\r\n      this.showLoginModal = false;\r\n    },\r\n    initScene() {\r\n      // Create a scene\r\n      this.scene = new THREE.Scene();\r\n\r\n      // Create a cube geometry\r\n      const geometry = new THREE.BoxGeometry();\r\n      const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n      const cube = new THREE.Mesh(geometry, material);\r\n      this.scene.add(cube);\r\n      this.cube = cube;\r\n\r\n      // ...\r\n    },\r\n    animate() {\r\n      requestAnimationFrame(this.animate);\r\n\r\n      if (window.scrollY > 0) {\r\n        // Calculate the rotation angles based on the scroll position\r\n        const rotationX = (window.scrollY / window.innerHeight) * Math.PI * 2;\r\n        const rotationY = (window.scrollY / window.innerHeight) * Math.PI * 2;\r\n\r\n        // Apply the rotation to the cube\r\n        this.cube.rotation.x = rotationX;\r\n        this.cube.rotation.y = rotationY;\r\n\r\n        // Render the scene\r\n        this.renderer.render(this.scene, this.camera);\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    LoginView\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.animation-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}