{"ast":null,"code":"import LoginView from '@/components/LoginView.vue';\nexport default {\n  data() {\n    return {\n      isLargeScreen: true,\n      hideBottomNav: true,\n      scrollTimer: null,\n      isAtTop: false,\n      showLoginModal: false\n    };\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleScreenResize);\n    this.handleScreenResize();\n    this.$refs.scrollContainer.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleScreenResize);\n    this.$refs.scrollContainer.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    handleScreenResize() {\n      this.isLargeScreen = window.innerWidth >= 768;\n      this.hideBottomNav = window.innerWidth >= 768;\n    },\n    handleScroll() {\n      clearTimeout(this.scrollTimer);\n      this.isAtTop = window.scrollY === 0;\n\n      // Set a timeout to hide the bottom nav after 5 seconds of scroll inactivity\n      this.scrollTimer = setTimeout(() => {\n        this.hideBottomNav = true;\n      }, 5000);\n    },\n    openLoginModal() {\n      this.showLoginModal = true;\n    },\n    closeLoginModal() {\n      this.showLoginModal = false;\n    }\n  },\n  components: {\n    LoginView\n  }\n};","map":{"version":3,"names":["LoginView","data","isLargeScreen","hideBottomNav","scrollTimer","isAtTop","showLoginModal","mounted","window","addEventListener","handleScreenResize","$refs","scrollContainer","handleScroll","beforeUnmount","removeEventListener","methods","innerWidth","clearTimeout","scrollY","setTimeout","openLoginModal","closeLoginModal","components"],"sources":["C:\\Users\\burge\\OneDrive\\Desktop\\mh_py\\frontend\\src\\components\\LandingPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-black flex flex-col min-h-screen\">\r\n    <div class=\"w-full bg-sky-300 h-20 flex justify-between items-center\">\r\n      <button class=\"ml-4 bg-red-500 text-white px-4 py-2 rounded\">Left</button>\r\n      <button class=\"mr-4 bg-blue-500 text-white px-4 py-2 rounded\" @click=\"openLoginModal\">Login</button>\r\n      <!-- Other top navigation content -->\r\n    </div>\r\n    <div class=\"flex w-screen flex-grow\">\r\n      <div v-if=\"isLargeScreen\" class=\"w-36 h-screen bg-cyan-100\">side nav</div>\r\n      <div class=\"w-screen h-auto bg-green-50\" ref=\"scrollContainer\" @scroll=\"handleScroll\">body</div>\r\n    </div>\r\n    <div\r\n      class=\"h-24 bg-green-500 fixed bottom-0 w-screen flex justify-between items-center\"\r\n      :class=\"{ 'hidden': hideBottomNav }\"\r\n    >\r\n      <button class=\"ml-4 bg-red-500 text-white px-4 py-2 rounded\">Left</button>\r\n      <!-- Other bottom navigation content -->\r\n      <button class=\"mr-4 bg-blue-500 text-white px-4 py-2 rounded\" @click=\"openLoginModal\">Login</button>\r\n    </div>\r\n    <div v-if=\"showLoginModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white w-1/2 h-1/2 rounded p-4\">\r\n        <LoginView @close=\"closeLoginModal\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoginView from '@/components/LoginView.vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLargeScreen: true,\r\n      hideBottomNav: true,\r\n      scrollTimer: null,\r\n      isAtTop: false,\r\n      showLoginModal: false\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('resize', this.handleScreenResize);\r\n    this.handleScreenResize();\r\n    this.$refs.scrollContainer.addEventListener('scroll', this.handleScroll);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.handleScreenResize);\r\n    this.$refs.scrollContainer.removeEventListener('scroll', this.handleScroll);\r\n  },\r\n  methods: {\r\n    handleScreenResize() {\r\n      this.isLargeScreen = window.innerWidth >= 768;\r\n      this.hideBottomNav = window.innerWidth >= 768;\r\n    },\r\nhandleScroll() {\r\n  clearTimeout(this.scrollTimer);\r\n\r\n  this.isAtTop = window.scrollY === 0;\r\n\r\n\r\n  // Set a timeout to hide the bottom nav after 5 seconds of scroll inactivity\r\n  this.scrollTimer = setTimeout(() => {\r\n    this.hideBottomNav = true;\r\n  }, 5000);\r\n},\r\n\r\n    openLoginModal() {\r\n      this.showLoginModal = true;\r\n    },\r\n    closeLoginModal() {\r\n      this.showLoginModal = false;\r\n    }\r\n  },\r\n  components: {\r\n    LoginView\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n</style>\r\n"],"mappings":"AA4BA,OAAOA,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,KAAK;MACdC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAC1D,IAAI,CAACA,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,KAAK,CAACC,eAAe,CAACH,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACI,YAAY,CAAC;EAC1E,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdN,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACL,kBAAkB,CAAC;IAC7D,IAAI,CAACC,KAAK,CAACC,eAAe,CAACG,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAAC;EAC7E,CAAC;EACDG,OAAO,EAAE;IACPN,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACR,aAAY,GAAIM,MAAM,CAACS,UAAS,IAAK,GAAG;MAC7C,IAAI,CAACd,aAAY,GAAIK,MAAM,CAACS,UAAS,IAAK,GAAG;IAC/C,CAAC;IACLJ,YAAYA,CAAA,EAAG;MACbK,YAAY,CAAC,IAAI,CAACd,WAAW,CAAC;MAE9B,IAAI,CAACC,OAAM,GAAIG,MAAM,CAACW,OAAM,KAAM,CAAC;;MAGnC;MACA,IAAI,CAACf,WAAU,GAAIgB,UAAU,CAAC,MAAM;QAClC,IAAI,CAACjB,aAAY,GAAI,IAAI;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAEGkB,cAAcA,CAAA,EAAG;MACf,IAAI,CAACf,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDgB,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAChB,cAAa,GAAI,KAAK;IAC7B;EACF,CAAC;EACDiB,UAAU,EAAE;IACVvB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}