{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      error: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        this.$emit('close');\n        await new Promise(resolve => setTimeout(resolve, 500)); // wait for .5 seconds\n\n        const response = await axios.post('http://localhost:8000/api/api-token-auth/', {\n          username: this.username,\n          password: this.password\n        });\n        localStorage.setItem('token', response.data.token);\n        this.error = ''; // clear any previous errors\n        this.$router.push('/protected'); // redirect to a protected page\n      } catch (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          this.error = 'Error: ' + error.response.data.detail;\n        } else if (error.request) {\n          // The request was made but no response was received\n          this.error = 'Error: No response from server';\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          this.error = 'Error: ' + error.message;\n        }\n      }\n    },\n    cancel() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","error","methods","login","$emit","Promise","resolve","setTimeout","response","post","localStorage","setItem","token","$router","push","detail","request","message","cancel"],"sources":["C:\\Users\\burge\\OneDrive\\Desktop\\mh_py\\frontend\\src\\components\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-5 flex items-center justify-center bg-blue-500\">\r\n    <div class=\"bg-white p-10 rounded shadow-2xl w-full\">\r\n      <h2 class=\"text-center text-3xl font-extrabold text-gray-900 mb-7\">Login</h2>\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"space-y-0\">\r\n          <div>\r\n            <label for=\"username\" class=\"sr-only\">Username</label>\r\n            <input id=\"username\" type=\"text\" v-model=\"username\" required class=\"w-full px-3 py-2 placeholder-gray-500 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" placeholder=\"Username\">\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input id=\"password\" type=\"password\" v-model=\"password\" required class=\"w-full px-3 py-2 placeholder-gray-500 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" placeholder=\"Password\">\r\n          </div>\r\n\r\n          <div>\r\n            <button type=\"submit\" class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">Login</button>\r\n          </div>\r\n\r\n          <div>\r\n            <button type=\"button\" @click=\"cancel\" class=\"w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div v-if=\"error\" class=\"text-center text-red-500 font-semibold mt-6\">{{ error }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      error: ''\r\n    }\r\n  },\r\n  methods: {\r\nasync login() {\r\n  try {\r\n    this.$emit('close');\r\n    await new Promise(resolve => setTimeout(resolve, 500)); // wait for .5 seconds\r\n\r\n    const response = await axios.post('http://localhost:8000/api/api-token-auth/', {\r\n      username: this.username,\r\n      password: this.password\r\n    });\r\n    \r\n    localStorage.setItem('token', response.data.token);\r\n    this.error = ''; // clear any previous errors\r\n    this.$router.push('/protected'); // redirect to a protected page\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      this.error = 'Error: ' + error.response.data.detail;\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      this.error = 'Error: No response from server';\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      this.error = 'Error: ' + error.message;\r\n    }\r\n  }\r\n},\r\n\r\n    cancel() {\r\n      this.$emit('close');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":";AA+BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACX,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,IAAIC,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE;;QAExD,MAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,2CAA2C,EAAE;UAC7EV,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEFU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACV,IAAI,CAACc,KAAK,CAAC;QAClD,IAAI,CAACX,KAAI,GAAI,EAAE,EAAE;QACjB,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE;MACnC,EAAE,OAAOb,KAAK,EAAE;QACd,IAAIA,KAAK,CAACO,QAAQ,EAAE;UAClB;UACA;UACA,IAAI,CAACP,KAAI,GAAI,SAAQ,GAAIA,KAAK,CAACO,QAAQ,CAACV,IAAI,CAACiB,MAAM;QACrD,OAAO,IAAId,KAAK,CAACe,OAAO,EAAE;UACxB;UACA,IAAI,CAACf,KAAI,GAAI,gCAAgC;QAC/C,OAAO;UACL;UACA,IAAI,CAACA,KAAI,GAAI,SAAQ,GAAIA,KAAK,CAACgB,OAAO;QACxC;MACF;IACF,CAAC;IAEGC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACd,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}