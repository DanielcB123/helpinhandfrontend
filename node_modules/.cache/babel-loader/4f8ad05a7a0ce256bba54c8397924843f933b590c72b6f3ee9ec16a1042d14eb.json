{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* global google */\n// export default {\n//   methods: {\n//     logout() {\n//       localStorage.removeItem('token');\n//       this.$router.push('/'); // redirect to the login page\n//     }\n//   }\n// }\n// import * as THREE from 'three';\n\nimport LoginView from '@/components/LoginView.vue';\nexport default {\n  data() {\n    return {\n      isLargeScreen: true,\n      hideBottomNav: false,\n      scrollTimer: null,\n      prevScrollY: 0,\n      showLoginModal: false,\n      map: null\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      window.initMap = this.initMap;\n      this.initMap();\n    });\n    window.addEventListener('resize', this.handleScreenResize);\n    this.handleScreenResize();\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleScreenResize);\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    initMap() {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat: -34.397,\n          lng: 150.644\n        },\n        zoom: 8\n      });\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/'); // redirect to the login page\n    },\n\n    handleScreenResize() {\n      this.isLargeScreen = window.innerWidth >= 768;\n      this.hideBottomNav = window.innerWidth >= 768;\n    },\n    handleScroll() {\n      clearTimeout(this.scrollTimer);\n      if (window.pageYOffset > this.prevScrollY || window.innerWidth >= 768) {\n        // Scrolling down\n        this.hideBottomNav = true;\n      } else {\n        // Scrolling up\n        this.hideBottomNav = false;\n      }\n      this.prevScrollY = window.pageYOffset;\n\n      // Set a timeout to hide the bottom nav after 5 seconds of scroll inactivity\n      this.scrollTimer = setTimeout(() => {\n        this.hideBottomNav = true;\n      }, 5000);\n    },\n    openLoginModal() {\n      this.showLoginModal = true;\n    },\n    closeLoginModal() {\n      this.showLoginModal = false;\n    }\n  },\n  components: {\n    LoginView\n  }\n};","map":{"version":3,"names":["LoginView","data","isLargeScreen","hideBottomNav","scrollTimer","prevScrollY","showLoginModal","map","mounted","$nextTick","window","initMap","addEventListener","handleScreenResize","handleScroll","beforeUnmount","removeEventListener","methods","google","maps","Map","document","getElementById","center","lat","lng","zoom","logout","localStorage","removeItem","$router","push","innerWidth","clearTimeout","pageYOffset","setTimeout","openLoginModal","closeLoginModal","components"],"sources":["C:\\Users\\burge\\OneDrive\\Desktop\\mh_py\\frontend\\src\\components\\ProtectedView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-black flex flex-col min-h-screen\">\r\n    <div class=\"w-screen bg-sky-300 h-20 flex justify-between items-center\">\r\n      <div></div>\r\n      <div class=\"mr-12\">\r\n        <button @click=\"logout\" class=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-sky-500 hover:bg-sky-700\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"flex w-screen flex-grow\">\r\n      <div v-if=\"isLargeScreen\" class=\"w-36 h-screen bg-cyan-100\">side nav</div>\r\n\r\n      <!-- Main content area with three sections -->\r\n      <div class=\"w-full flex flex-col bg-green-50\" @scroll=\"handleScroll\">\r\n        <!-- Top div -->\r\n  <div class=\"w-full bg-yellow-200 p-4\">\r\n    top\r\n    <div id=\"map\" style=\"width: 100%; height: 400px;\"></div>\r\n\r\n          <div class=\"w-full sm:w-full bg-blue-200 p-4 \">\r\n            <p>Top left content goes here</p>\r\n          </div>\r\n\r\n  </div>\r\n\r\n        <!-- Middle div with three divs side by side -->\r\n        <div class=\"w-full flex flex-wrap justify-between bg-red-200 p-4\">\r\n          <div class=\"w-full sm:w-1/3 bg-blue-200 p-4\">\r\n            <p>Middle left content goes here</p>\r\n          </div>\r\n          <div class=\"w-full sm:w-1/3 bg-green-200 p-4\">\r\n            <p>Middle center content goes here</p>\r\n          </div>\r\n          <div class=\"w-full sm:w-1/3 bg-purple-200 p-4\">\r\n            <p>Middle right content goes here</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Bottom div with two divs side by side -->\r\n        <div class=\"w-full flex flex-wrap justify-between bg-orange-200 p-4\">\r\n          <div class=\"w-full sm:w-1/2 bg-pink-200 p-4\">\r\n            <p>Bottom left ddnt goes here</p>\r\n          </div>\r\n          <div class=\"w-full sm:w-1/2 bg-teal-200 p-4\">\r\n            <p>Bottom right content goes here</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"h-24 bg-green-500 fixed bottom-0 w-screen flex justify-between items-center\"\r\n      :class=\"{ 'hidden': hideBottomNav }\"\r\n    >\r\n      <button class=\"mr-4 bg-blue-500 text-white px-4 py-2 rounded\" @click=\"openLoginModal\">Login</button>\r\n    </div>\r\n\r\n    <div v-if=\"showLoginModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white w-1/2 h-1/2 rounded p-4\">\r\n        <LoginView @close=\"closeLoginModal\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n/* global google */\r\n// export default {\r\n//   methods: {\r\n//     logout() {\r\n//       localStorage.removeItem('token');\r\n//       this.$router.push('/'); // redirect to the login page\r\n//     }\r\n//   }\r\n// }\r\n// import * as THREE from 'three';\r\n\r\nimport LoginView from '@/components/LoginView.vue';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLargeScreen: true,\r\n      hideBottomNav: false,\r\n      scrollTimer: null,\r\n      prevScrollY: 0,\r\n      showLoginModal: false,\r\n      map: null,\r\n    };\r\n  },\r\n  mounted() {\r\n  this.$nextTick(() => {\r\n    window.initMap = this.initMap;\r\n    this.initMap();\r\n  });\r\n    window.addEventListener('resize', this.handleScreenResize);\r\n    this.handleScreenResize();\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.handleScreenResize);\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  },\r\n  methods: {\r\n  initMap() {\r\n    this.map = new google.maps.Map(document.getElementById('map'), {\r\n      center: {lat: -34.397, lng: 150.644},\r\n      zoom: 8\r\n    });\r\n  },\r\n    logout() {\r\n      localStorage.removeItem('token');\r\n      this.$router.push('/'); // redirect to the login page\r\n    },\r\n    handleScreenResize() {\r\n      this.isLargeScreen = window.innerWidth >= 768;\r\n      this.hideBottomNav = window.innerWidth >= 768;\r\n    },\r\n    handleScroll() {\r\n      clearTimeout(this.scrollTimer);\r\n\r\n      if (window.pageYOffset > this.prevScrollY || window.innerWidth >= 768) {\r\n        // Scrolling down\r\n        this.hideBottomNav = true;\r\n      } else {\r\n        // Scrolling up\r\n        this.hideBottomNav = false;\r\n      }\r\n\r\n      this.prevScrollY = window.pageYOffset;\r\n\r\n      // Set a timeout to hide the bottom nav after 5 seconds of scroll inactivity\r\n      this.scrollTimer = setTimeout(() => {\r\n        this.hideBottomNav = true;\r\n      }, 5000);\r\n    },\r\n    openLoginModal() {\r\n      this.showLoginModal = true;\r\n    },\r\n    closeLoginModal() {\r\n      this.showLoginModal = false;\r\n    }\r\n  },\r\n  components: {\r\n    LoginView,\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n</style>\r\n"],"mappings":";AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAQ,MAAO,4BAA4B;AAGlD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,KAAK;MACrBC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,CAAC,MAAM;MACnBC,MAAM,CAACC,OAAM,GAAI,IAAI,CAACA,OAAO;MAC7B,IAAI,CAACA,OAAO,CAAC,CAAC;IAChB,CAAC,CAAC;IACAD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAC1D,IAAI,CAACA,kBAAkB,CAAC,CAAC;IACzBH,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACE,YAAY,CAAC;EACtD,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdL,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,kBAAkB,CAAC;IAC7DH,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAAC;EACzD,CAAC;EACDG,OAAO,EAAE;IACTN,OAAOA,CAAA,EAAG;MACR,IAAI,CAACJ,GAAE,GAAI,IAAIW,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;QAC7DC,MAAM,EAAE;UAACC,GAAG,EAAE,CAAC,MAAM;UAAEC,GAAG,EAAE;QAAO,CAAC;QACpCC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC;IACCC,MAAMA,CAAA,EAAG;MACPC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC1B,CAAC;;IACDlB,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACX,aAAY,GAAIQ,MAAM,CAACsB,UAAS,IAAK,GAAG;MAC7C,IAAI,CAAC7B,aAAY,GAAIO,MAAM,CAACsB,UAAS,IAAK,GAAG;IAC/C,CAAC;IACDlB,YAAYA,CAAA,EAAG;MACbmB,YAAY,CAAC,IAAI,CAAC7B,WAAW,CAAC;MAE9B,IAAIM,MAAM,CAACwB,WAAU,GAAI,IAAI,CAAC7B,WAAU,IAAKK,MAAM,CAACsB,UAAS,IAAK,GAAG,EAAE;QACrE;QACA,IAAI,CAAC7B,aAAY,GAAI,IAAI;MAC3B,OAAO;QACL;QACA,IAAI,CAACA,aAAY,GAAI,KAAK;MAC5B;MAEA,IAAI,CAACE,WAAU,GAAIK,MAAM,CAACwB,WAAW;;MAErC;MACA,IAAI,CAAC9B,WAAU,GAAI+B,UAAU,CAAC,MAAM;QAClC,IAAI,CAAChC,aAAY,GAAI,IAAI;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDiC,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC9B,cAAa,GAAI,IAAI;IAC5B,CAAC;IACD+B,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC/B,cAAa,GAAI,KAAK;IAC7B;EACF,CAAC;EACDgC,UAAU,EAAE;IACVtC;EAEF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}